#!/usr/bin/perl

=head1 SYNOPSIS
    SCRIPT:   connectDB.pl
    LOCATION: Fullstack/Playground/
    CLIENT:   MUREX ATA, MUREX EOD
    AUTHOR:   Yoann Racine
    DATE:     02-09-2018
    PLATFORM: TBA
    PURPOSE:  Read a config file that contains all the murex launchers then check if all the launchers are up and running
 		      Read a config file that contains all the running murex processing scripts (feeders, extractions) and check if any process is suspending/hanging
 	          Check the server status (HDD, RAM, etc.) of all the servers
 		      Send summary report via email to users.       
    USAGE:    launchDB.pl 
=cut

use 5.010;
use strict;
use warnings;
use File::Basename;
use DBI;
use POSIX qw(strftime);
use Log::Log4perl qw(get_logger);

my $datetime = strftime("%Y%m%d",localtime());


use constant LOGCONF => "$ENV{LOGCONF}";

Log::Log4perl::init(LOGCONF);

my $logger = Log::Log4perl -> get_logger();

my @ARGV = ("Hello","World!");
my $filecontent = `ls -lrth | grep yoann`;
#my $filecontent = "Hello World\n";
my %conf;
my $value;
print $filecontent;
my $label;
open(my $LOG, ">> Logs") || die "Can't open $ARGV[0]: $!";

my @lines;
open(DATA,"<import.txt") or die "Can't open data";
@lines = <DATA>;
close(DATA);
my $success = open LOGI, ">>logfile";
print LOGI "Hello World!\n";
close LOGI;
open REPORT, '>> report.txt';
print REPORT "My first report generated by perl\n";
print REPORT $filecontent;
close REPORT;
print "done\n";

sub hello ()
{
unless (open CONFIG, "dino") {
    $logger -> logdie("$ARGV[0] Cannot open dino : $!");
} else {
    while (<CONFIG>) {
        chomp;
        next if /^(\s|\n)*$/; #skip blank lines
        next if /^#/;   #skip comment lines
        ($label, $value) = split /=/, $_;
        $value =~ s/\$(w+)/$ENV{$1}/eg; #cfg may contain $WRK
        $label =~ s/\s+$//;  #remove trailing spaces
        $value =~ s/^\s+//;  #remove leading spaces
        $conf{$label} = $value;
        print "$value\n";
    }
    print %conf."\n";
    return $label;
}
close CONFIG;
}

hello();
